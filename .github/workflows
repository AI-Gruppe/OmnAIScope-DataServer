name: Build-Linux-Binary

on:
  push:
    tags:
      - 'v*'            # nur Release-Tags wie v1.2.3

permissions:
  contents: write
  actions: read

jobs:
  build-linux:
    runs-on: ubuntu-24.04

    steps:
      # 1) Code + Tags auschecken
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Submodule holen (entspricht git submodule update --init --recursive)
      - name: Init submodules
        run: git submodule update --init --recursive

      # 3) System-Abh√§ngigkeiten installieren
      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
               build-essential cmake autoconf libudev-dev \
               automake autoconf-archive ninja-build

      # 4) CMake konfigurieren (Release)
      - name: Configure
        run: |
          cmake -S . -B build -G Ninja \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake"

      # 5) Build
      - name: Build
        run: cmake --build build --parallel

      # 6) Binary optional strippen
      - name: Strip binary
        run: strip build/MiniOmni || true

      # 7) Binary einsammeln
      - name: Stage binary
        run: |
          mkdir -p bin
          cp build/MiniOmni "bin/MiniOmni-linux-${{ github.ref_name }}"

      # 8) In Branch "binaries" committen (verhindert Rekursion dank [skip ci])
      - name: Commit binary
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: binaries
          file_pattern: 'bin/**'
          commit_message: "Add Linux binary for ${{ github.ref_name }} [skip ci]"

      # 9) (Optional) Artefakt hochladen
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: MiniOmni-linux-${{ github.ref_name }}
          path: bin/
